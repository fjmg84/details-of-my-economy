---
import CardColors from "./CardColors.astro";
---

<!-- Summary Cards -->
<div
  style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem;"
>
  <CardColors
    id="totalIncome"
    defaultValue="$0.00"
    bgColor="#f0fdf4"
    borderColor="#dcfce7"
    textColor="#16a34a"
    title="Ingresos Totales"
  />
  <CardColors
    id="totalExpense"
    defaultValue="$0.00"
    bgColor="#fef2f2"
    borderColor="#fecaca"
    textColor="#dc2626"
    title="Gastos Totales"
  />
  <CardColors
    id="balance"
    defaultValue="$0.00"
    bgColor="#eff6ff"
    borderColor="#bfdbfe"
    textColor="#2563eb"
    title="Balance"
  />
</div>

<script>
  // Calculate summary
  import { calculateSummary } from "../utils/lib";
  import { formatCurrency } from "../utils/lib";
  import type { Transaction } from "../types/finance";
  import { getTransactions } from "../utils/storage";
  import { EVENT_NAME } from "src/utils/config";

  // Update summary cards
  const updateSummary = (transactions: Transaction[]) => {
    const summary = calculateSummary(transactions);
    const totalIncomeEl = document.getElementById("totalIncome");
    const totalExpenseEl = document.getElementById("totalExpense");
    const balanceEl = document.getElementById("balance");

    if (totalIncomeEl)
      totalIncomeEl.textContent = formatCurrency(summary.income);
    if (totalExpenseEl)
      totalExpenseEl.textContent = formatCurrency(summary.expense);
    if (balanceEl) balanceEl.textContent = formatCurrency(summary.balance);
  };

  const today = new Date();
  const year = today.getFullYear();
  const month = today.getMonth() + 1;

  const filterTransactionsByMonth = (transactions: Transaction[]) => {
    if (transactions.length === 0) return [];

    return transactions.filter((t) => {
      const createdAt = new Date(t.createdAt);
      return (
        createdAt.getFullYear() === year && createdAt.getMonth() + 1 === month
      );
    });
  };

  window.addEventListener("DOMContentLoaded", () => {
    const transactions = getTransactions();
    const filteredTransactions = filterTransactionsByMonth(transactions);
    updateSummary(filteredTransactions);
  });

  window.addEventListener(EVENT_NAME.TRANSACTIONS_UPDATED, () => {
    const transactions = getTransactions();
    const filteredTransactions = filterTransactionsByMonth(transactions);

    updateSummary(filteredTransactions);
  });
</script>
