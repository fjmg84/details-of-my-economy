---
import AssistantIcon from "./Icons/AssistantIcon.astro";
import ChartIcon from "./Icons/ChartIcon.astro";
import ExpenseIcon from "./Icons/ExpenseIcon.astro";
import IncomeIcon from "./Icons/IncomeIcon.astro";
import AddIcon from "./Icons/AddIcon.astro";
import IconComponent from "./Icons/IconComponent.astro";

const { pathname } = Astro.url;
---

<nav class="flex flex-col mt-4">
  <a
    href="/dashboard/"
    class={pathname === "/dashboard/"
      ? "text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"
      : "text-gray-700 hover:text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"}
  >
    <div class="flex items-center gap-2">
      <IconComponent color="currentColor" sizeX="24" sizeY="24">
        <AddIcon />
      </IconComponent>
      <span class="ml-2">Agregar Transacci√≥n</span>
    </div>
  </a>
  <a
    href="/dashboard/income"
    class={pathname === "/dashboard/income"
      ? "text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"
      : "text-gray-700 hover:text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"}
  >
    <div class="flex items-center gap-2">
      <IconComponent color="currentColor" sizeX="24" sizeY="24">
        <IncomeIcon />
      </IconComponent>
      <span class="ml-2">Lista de Ingresos</span>
      <span
        id="incomeCount"
        class="text-[#f0fdf4] bg-[#16a34a] p-2 w-[20px] h-[20px] rounded-full flex items-center justify-center"
      ></span>
    </div>
  </a>
  <a
    href="/dashboard/expenses"
    class={pathname === "/dashboard/expenses"
      ? "text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"
      : "text-gray-700 hover:text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"}
  >
    <div class="flex items-center gap-2">
      <IconComponent color="currentColor" sizeX="24" sizeY="24">
        <ExpenseIcon />
      </IconComponent>
      <span class="ml-2">Lista de Gastos</span>
      <span
        id="expenseCount"
        class="text-[#fef2f2] bg-[#dc2626] p-2 w-[20px] h-[20px] rounded-full flex items-center justify-center"
      ></span>
    </div>
  </a>
  <a
    href="/dashboard/charts"
    class={pathname === "/dashboard/charts"
      ? "text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"
      : "text-gray-700 hover:text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"}
  >
    <!-- viewBox="0 0 2048 2048" -->
    <div class="flex items-center gap-2">
      <IconComponent color="currentColor" sizeX="24" sizeY="24">
        <ChartIcon />
      </IconComponent>
      <span class="ml-2">Graficos</span>
    </div>
  </a>
  <a
    href="/dashboard/assistant"
    class={pathname === "/dashboard/assistant"
      ? "text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"
      : "text-gray-700 hover:text-indigo-600 px-3 py-2 rounded-md text-sm font-medium flex items-center"}
  >
    <div class="flex items-center gap-2">
      <IconComponent color="currentColor" sizeX="24" sizeY="24">
        <AssistantIcon />
      </IconComponent>
      <span class="ml-2">Asistente IA</span>
    </div>
  </a>
</nav>

<script>
  import { getTransactions } from "src/utils/storage";
  import { getTransactionsToday } from "src/utils/lib";
  import { EVENT_NAME } from "src/utils/config";

  const getTransactionsTodayCount = () => {
    const transactions = getTransactions();
    const transactionsToday = getTransactionsToday(transactions);
    const expenses =
      transactionsToday.filter((t) => t.type === "expense") || [];
    const income = transactionsToday.filter((t) => t.type === "income") || [];

    const incomeCount = document.getElementById("incomeCount");
    const expenseCount = document.getElementById("expenseCount");

    if (incomeCount) {
      incomeCount.textContent = income.length.toString();
    }

    if (expenseCount) {
      expenseCount.textContent = expenses.length.toString();
    }
  };

  window.addEventListener(EVENT_NAME.TRANSACTIONS_UPDATED, () => {
    getTransactionsTodayCount();
  });

  getTransactionsTodayCount();
</script>
