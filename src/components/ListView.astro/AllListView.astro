<div
  style="margin-top: 1.5rem; background: white; border-radius: 0.5rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1); overflow: hidden;"
>
  <div style="padding: 1rem 1.5rem; border-bottom: 1px solid #e5e7eb;">
    <h3 style="font-size: 1.125rem; font-weight: 500;">
      Transacciones Recientes
    </h3>
  </div>
  <div style="border-top: 1px solid #e5e7eb;">
    <div id="recentTransactions">
      <!-- Transactions will be inserted here by JavaScript -->
    </div>
  </div>
</div>

<script>
  import type { Transaction } from "src/types/finance";
  import { formatCurrency, formatDate } from "src/utils/lib";
  import { categoryConfig, EVENT_NAME } from "src/utils/config";
  import { getTransactions } from "src/utils/storage";

  // Update recent transactions
  const updateRecentTransactions = (transactions: Transaction[]) => {
    const container = document.getElementById("recentTransactions");
    if (!container) return;

    if (transactions.length === 0) {
      container.innerHTML =
        '<div style="padding: 1rem; text-align: center; color: #6b7280;">No hay transacciones recientes</div>';
      return;
    }

    container.innerHTML = transactions
      .map(
        (t: Transaction) => `
      <div style="padding: 1rem; display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid #e5e7eb;">
        <div>
          <div style="font-weight: 500;">${t.description}</div>
          <div style="font-size: 0.875rem; color: #6b7280;">${categoryConfig[t.category]?.label || t.category} â€¢ ${formatDate(t.date)}</div>
        </div>
        <div style="font-weight: 500; color: ${t.type === "income" ? "#166534" : "#991b1b"};">
          ${t.type === "income" ? "+" : "-"}${formatCurrency(t.amount)}
        </div>
      </div>
    `
      )
      .join("");
  };

  // Initialize on load
  document.addEventListener("DOMContentLoaded", () => {
    const transactions = getTransactions();
    updateRecentTransactions(transactions);
  });

  // Listen for localStorage changes
  window.addEventListener("storage", (e) => {
    if (e.key === "transactions") {
      const transactions = getTransactions();
      updateRecentTransactions(transactions);
    }
  });

  // Listen for custom events (for same-tab updates)
  window.addEventListener(EVENT_NAME.TRANSACTIONS_UPDATED, () => {
    const transactions = getTransactions();
    updateRecentTransactions(transactions);
  });
</script>
